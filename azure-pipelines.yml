trigger:
- master

variables:
  MONO_REVISION: 'mono-6.12.0.100'

jobs:
- job: Build_Mono
  timeoutInMinutes: 0
  pool:
   vmImage: 'windows-2019'
  steps:
  - powershell: |
      choco install cygwin --params "/InstallDir:C:\cygwin /NoStartMenu" 
      refreshenv
      choco install cyg-get
      refreshenv
      cyg-get autoconf automake bison gcc-core gcc-g++ mingw64-i686-runtime mingw64-i686-binutils mingw64-i686-gcc-core mingw64-i686-gcc-g++ mingw64-i686-pthreads mingw64-i686-w32api mingw64-x86_64-runtime mingw64-x86_64-binutils mingw64-x86_64-gcc-core mingw64-x86_64-gcc-g++ mingw64-x86_64-pthreads mingw64-x86_64-w32api libtool make python gettext-devel gettext intltool libiconv pkg-config git curl wget libxslt bc patch cmake perl yasm unzip
    displayName: 'Fetch Cygwin'
  - script: |
      choco install mono
      mkdir Binaries
      robocopy "C:\Program Files\Mono" %cd%\Binaries /E /MIR
      git clone  -b $(MONO_REVISION) --recurse-submodules https://github.com/mono/mono.git
    displayName: 'Fetch mono repo'
  - task: BatchScript@1
    inputs:
      filename: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat'
      modifyEnvironment: True
  - bash: |
      export PREFIX=$(pwd)/Binaries
      export PATH='/c/Program Files/Mono/bin':'/c/cygwin/bin':$PATH
      cd mono
      ./autogen.sh --prefix=$PREFIX/x64 --host=x86_64-w64-mingw32 --enable-msvc --disable-boehm
      make -j4
      make install
    displayName: 'Build mono'
    continueOnError: true
    failOnStderr: false
  - powershell: |
      7z a mono.zip Binaries\*
    displayName: 'Copy Binaries'
  - publish: $(Build.SourcesDirectory)/mono.zip
    artifact: Mono Binaries
  
  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'msmshazan Github PAT'
      repositoryName: 'msmshazan/monobuild'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: 'Release-$(MONO_REVISION)'
      title: 'Mono Binaries'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'
      assets: '$(Build.SourcesDirectory)/mono.zip'
